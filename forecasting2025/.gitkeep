---
title: ""
subtitle: ""

date: "06-06-2025 til 13-06-2025"
author:
  - "Anonym"
  - "Maria B. A. Hitz"
  - "Anonym"
  
format: 
  pdf:
    toc: false
    toc-title: Indholdsfortegnelse
    toc-depth: 4
    number-sections: true
    number-depth: 4
    mainfont: "Georgia"
    fontsize: 11pt
    linestretch: 1.5
    geometry:
      - top=30mm
      - left=20mm
      - right=20mm
      - bottom=30mm
      - heightrounded
    fig-cap-location: bottom
    fig-numbering: true
    lang: da
---


\renewcommand{\contentsname}{Indholdsfortegnelse}
\newpage


```{r}
#| label: setup
#| include: false
#| warning: false
options(kableExtra.latex.load_packages = FALSE)

# install.packages('BiocManager')
# install.packages('readr')

# PAKKER BRUGT I OPGAVEN:
pacman::p_load( 
broom,          # Konverterer modeloutput til tidy dataframes (pænt formateret)
car,            # Klassisk regression og diagnostiske tests
feasts,         # Tidsserieanalyse og feature extraction til tsibble-objekter
fable,          # Forecasting frameworks for tidsserier i tidymodels-stil
fpp2,           # Data + funktioner til bogen "Forecasting: Principles and 
# Practice" 2. udg.
fpp3,           # Data + funktioner til 3. udgave af samme bog, moderne 
# tidsserieanalyse
fabletools,     # Understøtter fable med værktøjer til modeller og forecasting 
# pipelines
forecast,       # Klassiske forecastingfunktioner (ARIMA, ETS osv.)
lubridate,      # Håndtering og parsing af datoer og tidspunkter
ggplot2,        # Kraftigt og fleksibelt grafikkit baseret på “grammar of 
# graphics”
gghighlight,    # Fremhæver specifikke datapunkter eller grupper i ggplot-grafer
ggpubr,         # Publikation-klar grafstil til ggplot2 (temaer og ekstra 
# funktioner)
gridExtra,      # Arrangering af flere ggplot-grafer i layouts og grids
GGally,         # Udvidelse til ggplot2 med ekstra plots, fx parplots (scatter 
# matrix)
glue,           # Smidig strengmanipulation og interpolation (indsæt variabler 
# i tekst)
gt,             # Lav flotte tabeller til rapporter (i HTML, LaTeX mv.)
ggfortify,      # Visualisering af tidsserier og modeller med ggplot2
hrbrthemes,     # Moderne, lækre ggplot-temaer og fonte
janitor,        # Rengøring og håndtering af datasæt (fx rename, clean_names)
knitr,          # Dynamisk rapportgenerering og integrering af kode i dokumenter
kableExtra,     # Udvidelse af knitr::kable til flottere tabeller
latex2exp,      # Oversætter LaTeX-matematik til ggplot2-udtryk
readr,          # Hurtig og effektiv indlæsning af tekstfiler (CSV, TSV osv.)
seasonalview,   # Visualisering og interaktiv analyse af sæsonkorrektion
seasonal,       # Interface til X-13-ARIMA-SEATS sæsonkorrektion (statistik)
shiny,          # Byg interaktive webapps direkte fra R
slider,         # Effektiv håndtering af rullende og glidende vinduer i data
tidyverse,      # Samlet pakke med dplyr, ggplot2, tidyr osv. til dataanalyse
tinytex,        # Let installation af LaTeX til PDF-rapportgenerering
tsibble,        # Tidsserie-datastruktur (tid + key) til moderne 
# tidsserieanalyse
tsibbledata     # Eksempeldatasæt til brug med tsibble-pakken og 
# tidsserieanalyse

)

```

\begin{titlepage}
\begin{center}

\begin{center}
\includegraphics[width=15cm]{figs/forsidebillede.png}
\end{center}

\vfill

{\Large \textbf{Ugeeksamen i Forecasting - Sommer 2025}}\\
\vspace{0cm}
\textit{Underviser: Bjarne Taulo Sørensen}

\vfill

{\large \textbf{Udarbejdet af:}}\\
\vspace{0cm}
\textit{Anonym, Maria B. A. Hitz og Anonym}

\vfill

{\large \textbf{Afleveringsdato: 13. juni 2025}}\\
\vfill
\text{Antal tegn: 36.000}

\end{center}
\end{titlepage}
\newpage

\tableofcontents
\newpage


# Opgavebeskrivelse

I denne case skal de studerende foretage en tidsserieanalyse og forecasting af 
arbejdsløshed i hver region for hvert køn i Danmark.
Formålet er at identificere tendenser og sæsonmønstre i data,
og anvende passende modeller til at forudsige fremtidig arbejdsløshed
De studerende skal bruge (S)ARIMA, ETS samt en simpel benchmarkmodel.

# Data

Data indeholder månedlig arbejdsløshed for hver region og køn i Danmark fra 
januar 2007 til december 2019.
Tallene er angivet som enheder af 10.0000 og er sæsonkorrigerede.
Arbejdsløsheden i datasættet måles som antal arbejdsløse pr. 10.000 personer i 
arbejdsstyrken. En værdi på 5 betyder således, at der er cirka 50.000 
arbejdsløse, mens en værdi på 0,01 svarer til cirka 100 arbejdsløse.

Datasættet tager udgangspunkt i fire variabler:
yearmonth: Dato i formatet "ÅÅÅÅ-MM",
region: Region i Danmark (f.eks. "Region Hovedstaden"),
kon: Køn (f.eks. "Mænd" eller "Kvinder"),
svalue: Arbejdsløshed i enheder af 10.0000 (sæsonkorrigeret).

**Dataforberedelse:**

Der lavet en tsibble med index- og keyvariabler på forhånd.

## Visualisering

I dette afsnit er der lavet en indledende eksplorativ dataanalyse (EDA) af 
arbejdsløsheden i Danmark. 
Der er lavet 4 forskellige visualiseringer, der viser udviklingen i 
arbejdsløshed i perioden 2007-2019.

### Første visualisering
Den første visualisering er et autoplot, som viser den overordnede udvikling i arbejdsløsheden fra 2007 til 2019. Hver farvede linje repræsenterer en specifik 
gruppe – f.eks. mænd i Region Midtjylland eller kvinder i Region Sjælland.

![Arbejdsløshed - alle serier](figs/autoplotarbejdsloshed.png){ width=80% fig-align="center" }
Figur 1. Arbejdsløshed - alle serier samlet (2007–2019)

Ved at samle alle grupper i ét plot kan man let sammenligne tendenser på tværs 
af køn og regioner. Dog kan mange linjer gøre visualiseringen en smule 
uoverskuelig.

I flere regioner – særligt blandt mænd – ses klare sæsonudsving, hvor 
arbejdsløsheden er høj i vintermånederne og lavere om sommeren. Det skyldes 
typisk sæsonprægede brancher som:

- Byggebranchen - lav aktivitet om vinteren 

- Landbrug og skovbrug - travlhed i foråret og sommeren

- Industri - vinterfyringer pga. nedsat produktion

- Turisme - Høj aktivitet i sæsonperioderne

Mænd har generelt højere arbejdsløshed end kvinder, hvilket især kan forklares 
ved, at de oftere arbejder i sæsonprægede brancher som byggeri, landbrug og 
industri.

### Anden visualisering

Den anden visualisering viser arbejdsløshedens udvikling fordelt på region og 
køn, hvilket øger overskueligheden og gør det lettere at identificere regionale 
og kønsspecifikke mønstre.

![Arbejdsløshed over tid - fordelt på køn og region](figs/arbejdsloshed_over_tid.png){ width=80% fig-align="center" }
Figur 2. Arbejdsløshed over tid - fordelt på køn og region

Sæsonudsving fremstår tydeligst blandt mænd – særligt i Region Midtjylland, 
Sjælland og Syddanmark – hvilket sandsynligvis hænger sammen med deres 
overrepræsentation i brancher med sæsonpræget beskæftigelse (jf. figur 1).

I Hovedstaden ses en markant højere arbejdsløshed blandt kvinder, især i årene 
efter finanskrisen, hvor raten overstiger 3. Det kan muligvis skyldes, at mange 
kvinder i regionen var ansat i service- og detailbranchen, som formentlig blev
hårdt ramt.

I kontrast har kvinder i Region Nordjylland en lav og stabil arbejdsløshed. 
Det kan muligvis skyldes, at flere er beskæftiget i mere konjunkturresistente 
brancher – f.eks. i den offentlige sektor.

Overordnet ses en nedadgående trend i arbejdsløsheden fra 2010 og frem.

### Tredje visualisering 
Den tredje visualisering er et sæsonplot, som viser arbejdsløshedens 
sæsonmønstre fordelt på region og køn..

![Arbejdsløshed sæsonplot](figs/arbejdsløshed_saeson_ny.png){ width=80% fig-align="center" }
Figur 3. Sæsonplot af arbejdsløshed i Danmark (2007–2019).

Sæsonmønstrene bliver her tydeligere, da serierne kan sammenlignes direkte. 
Vi ser bl.a., at kvinder og mænd i Hovedstaden generelt har højere 
arbejdsløshed end andre i andre regioner særligt i årene efter finanskrisen, 
hvor raten overstiger 3 for mænd og 2 for kvinder.

Mænd i alle regioner oplever en markant stigning i arbejdsløsheden i 2009–2010, 
efterfulgt af et gradvist fald – hvilket afspejler krisens effekt.

Kvinder i Region Nordjylland har den laveste og mest stabile arbejdsløshed 
gennem hele perioden.

Der ses tydelige sæsonudsving, især blandt mænd, hvor arbejdsløsheden topper i vintermånederne og falder hen over sommeren. Det stemmer overens med brancher 
som byggeri, industri og landbrug, hvor beskæftigelsen er sæsonpræget.

Kvinder oplever generelt færre sæsonudsving, men i Hovedstaden ses en relativt 
høj og stabil ledighed. Det kan muligvis skyldes konkurrence i servicefag og 
mange deltidsstillinger.

Sæsonplottet bekræfter dermed de mønstre, der blev observeret i de tidligere 
visualiseringer.

### Fjerde visualisering

Den fjerde visualisering er et subserieplot, som viser sæsonmønstre i 
arbejdsløsheden for hver region og køn.


![Subserieplot af arbejdsløshed](figs/subserieplot.png){ width=80% fig-align="center" }
Figur 4. Subserieplot af arbejdsløshed i Danmark (2007–2019).

Hver lille graf viser det månedlige sæsonmønster over tid for én gruppe (fx 
mænd i Nordjylland). Den sorte linje viser det gennemsnitlige sæsonmønster for 
gruppen.

Den blå vandrette linje markerer månedsgennemsnittet og fungerer som et slags 
nulpunkt. Hvis kurven ligger over den blå linje, betyder det, at 
arbejdsløsheden i den måned plejer at være højere end normalt. Hvis kurven 
ligger under, er arbejdsløsheden lavere end gennemsnittet for den måned.

Plottet viser tydelige sæsonudsving – især blandt mænd i regioner som 
Nordjylland og Syddanmark, hvor arbejdsløsheden stiger i vintermånederne. Det 
skyldes job i fx byggeri, transport og landbrug, hvor der ofte sker 
vinterfyringer.

Omvendt ses mere stabile mønstre blandt kvinder i Nordjylland, som – ligesom 
tidligere visualiseringer viste – har en lav og jævn arbejdsløshed. Dette kan 
hænge sammen med beskæftigelse i mere stabile brancher som offentlig 
administration, sundhed og uddannelse.

## Deskriptive statistikker:

Tabel over statistikker: 

![Tabel over statistik](figs/statistiker.png){ width=80% fig-align="center" }
Tabel 1. Deskriptiv stastistik for arbejdsløshed i Danmark (2007–2019) fordelt
på region og køn.


Tabellen viser, at mænd generelt har højere arbejdsløshedsrater end kvinder i 
alle regioner. Dette stemmer overens med de tidligere visualiseringer, hvor 
mænds ledighed lå systematisk højere.

Region Hovedstaden har de højeste rater for begge køn, hvilket kan skyldes 
stor konkurrence, mange deltidsstillinger og høj andel af beskæftigelse i 
konjunkturfølsomme brancher som detailhandel og service.

Region Nordjylland har den laveste arbejdsløshed, især blandt kvinder. Dette 
kan forklares med større beskæftigelse i offentlige og stabile sektorer som 
sundhed og uddannelse, hvilket også blev tydeligt i visualiseringerne.

Sæsonstyrken er højere blandt mænd, særligt i Nordjylland og Sjælland, hvilket 
afspejler deres tilknytning til sæsonprægede erhverv. Dette bekræftes af de 
tydelige sæsonmønstre i sæson- og subserieplottene.

Trendstyrken ligger tæt på 1 for alle serier og bekræfter den langsigtede 
udvikling i arbejdsløsheden – herunder stigningen under finanskrisen og det 
efterfølgende fald.

## STL- Dekomposition

![STL dekomposition af arbejdsløshed](figs/stl_dekomposition_arbejdsloshed.png){ width=80% fig-align="center" }
Figur 5. STL-dekomposition af arbejdsløshed i Danmark (2007–2019)
Som led i analysen er der anvendt STL-dekomposition til at opdele hver 
tidsserie i tre dele: en langsigtet trend, et sæsonmønster og en støj. Dette 
giver et mere detaljeret billede af datastrukturen og er et vigtigt grundlag 
for modelvalg. 

Transformationsbehovet er blevet vurderet, men fravalgt, da dekompositionen 
viser, at variationen er forholdsvis konstant over tid, og den resterende støj 
ikke udviser systematiske mønstre. Derfor er der ikke tegn på variansproblemer,
som fx kunne kræve log-transformation.

Dekompositionen viser desuden en tydelig stigning i arbejdsløshed under 
finanskrisen, efterfulgt af et fald, samt regelmæssige årlige sæsonudsving i 
alle serier. Residualkomponenten er begrænset og tilfældig, hvilket tyder på, 
at hovedmønstrene er godt fanget af trend og sæson.


# Modelvalg

Formålet med dette afsnit er at identificere den mest egnede model til at 
forudsige arbejdsløshed i Danmark, fordelt på region og køn. Tre modeller er 
afprøvet og sammenlignet:

-    ARIMA: modellerer afhængighed og autokorrelation i tidsserier og egner sig 
til stationære data.

-    ETS: indfanger eksplicit trend og sæson uden krav om stationaritet.

-    Snaive: en simpel benchmarkmodel, der forudsiger fremtidige værdier som 
den seneste observation.

På baggrund af både visuelle og kvantitative analyser er det vurderet, at 
serierne er tilstrækkeligt stationære, og der er derfor ikke anvendt 
transformationer som log-skala.


```{r}
#| label: statistik
#| echo: false
#| results: asis
#| asis: true

arbejdsloshed <- readRDS("data/Airidk_long.rds")
statistik <- arbejdsloshed |>
  features(svalue, features = list(
    mean = mean,
    min = min,
    max = max,
    sd = sd,
    feat_stl = feat_stl
  )) |>
  dplyr::select(kon, region, mean, min, max, 
                feat_stl_trend_strength, 
                feat_stl_seasonal_strength_year) |>
  mutate(across(where(is.numeric), ~ round(.x, 2))) |>
  rename(
    Køn = kon,
    Region = region,
    Gennemsnit = mean,
    Minimum = min,
    Maksimum = max,
    Trendstyrke = feat_stl_trend_strength,
    Sæsonstyrke = feat_stl_seasonal_strength_year
  ) |>
  arrange(Region, Køn)

# Vis tabellen med gt
statistik |> 
  gt() |> 
  tab_header(
    title = "Deskriptive statistikker for arbejdsløshed (2007–2019)",
    subtitle = "Fordelt på region og køn"
  ) |>
  fmt_number(columns = where(is.numeric), decimals = 2)
  
```
Tabel 1. Deskriptive statistikker for arbejdsløshed (2007–2019) fordelt på
region og køn.

Tabel 1 viser deskriptive statistikker for arbejdsløshed i Danmark i perioden 
2007–2019, fordelt på region og køn. Trendstyrken varierer kun minimalt på tværs
af serier og ligger stabilt mellem 0,98 og 0,99, hvilket indikerer jævne og 
stabile trends over tid – snarere end markante stigninger eller fald.

![STL dekomposition af arbejdsløshed](figs/stl_dekomposition_arbejdsloshed.png){ width=80% fig-align="center" }
Figur 6. STL-dekomposition af arbejdsløshed i Danmark (2007–2019)


Resultaterne fra STL-dekompositionen bekræfter dette billede: Alle serier 
udviser en glat og stabil trendkomponent samt et tydeligt og regelmæssigt 
sæsonmønster. Den residualkomponent (støj) fremstår uden systematiske mønstre.

Sæsonstyrken ligger mellem 0,73 og 0,91, hvilket viser, at sæsonudsvingene er 
stærke og stabile over tid – og ikke præget af strukturelle skift.

En supplerende autokorrelationsanalyse (ACF-plots) af restleddene viser, at der 
ikke er signifikant autokorrelation tilbage. Det tyder på, at de væsentlige 
mønstre i data allerede er godt modelleret via trend og sæson.

På baggrund af disse analyser vurderes serierne som stationære, hvilket betyder,
at de kan modelleres direkte med ARIMA, ETS og Snaive uden 
behov for transformation. Modellerne estimeres individuelt for hver kombination
af region og køn ved hjælp af fable-pakken, som automatisk identificerer de 
mest passende modelparametre.

# Modelvalidering

Til validering anvender vi **time series cross-validation** (TSCV) med rullende
oprindelse (`stretch_tsibble()`). Denne metode en mere robust vurdering af 
forecast-præcision sammenlignet med enkelt 
træning/test-split, da fejl vurderes overer flere tidsvinduer.

Modellernes præcision vurderes med to metrikker:
- **RMSE** (Root Mean Squared Error): Følsom over for store fejl.
- **MAPE** (Mean Absolute Percentage Error): God til procentuel sammenligning.

For hver tidsserie (region × køn) identificeres den bedste model ud fra lavest 
RMSE.

![Bedste modeller](figs/best_models.png){ width=80% fig-align="center" }
Figur 6. Bedste modeller pr. region og køn baseret på RMSE.

Resultaterne viser, at ARIMA præsterer bedst for størstedelen af serierne.

Residualanalysen understøtter dette: ACF-plots og Ljung-Box-test viser typisk, 
at modellerne producerer residualer uden signifikant autokorrelation.



![ACF for kvinder i  Region Hovedstaden](figs/acf1.png){ width=80% fig-align="center" }
Figur 7. ACF-plot for kvinder i Region Hovedstaden.

ACF-plot for kvinder i Region Hovedstaden viser, at der ikke er
signifikant autokorrelation i residualerne. Alle lag er inden for
95% konfidensintervallet (grønne linjer), hvilket indikerer, at
residualerne er hvid støj. Dette er et godt tegn på, at modellen fanger
de underliggende mønstre i dataene.

Selvom residualanalysen generelt viser, at modellerne ikke har signifikant 
autokorrelation, fandt vi enkelte undtagelser, hvor de automatisk valgte 
ARIMA- og ETS-modeller fejlede på Ljung-Box-testen og viste tydelig 
autokorrelation i ACF-plottet.

For disse serier har vi manuelt estimeret alternative ARIMA-modeller med 
specifikke (p,d,q)(P,D,Q)[12]-parametre. De alternative modeller er udvalgt 
ved hjælp af en kombination af: AIC/BIC-kriterier (for informationsindhold og 
kompleksitet), p-værdi fra Ljung-Box-testen (mål for hvid støj i residualer), 
og visuel inspektion af ACF- og histogramplots.

Eksempler inkluderer bl.a. serierne for mænd i Region Midtjylland og Region 
Nordjylland, hvor de automatisk estimerede modeller ikke var tilstrækkelige. 
I stedet har vi afprøvet og sammenlignet flere ARIMA-kandidater, og valgt dem 
med den bedst mulige reststruktur og acceptable forecastegenskaber.

Denne tilgang har øget modellernes validitet og sikrer, at 
forecasting-resultaterne er mere pålidelige i praksis.


I enkelte tilfælde – fx mænd i Region Midtjylland og Region Nordjylland – viste 
de automatisk valgte modeller dog tydelig autokorrelation. Her er alternative 
ARIMA-modeller manuelt estimeret med specifikke sæsonparametre, valgt ud fra 
AIC/BIC, Ljung-Box p-værdi og visuel inspektion af residualer.

Denne tilgang har forbedret modeltilpasningen og øget forecast-pålideligheden.


# Forecasting

![Forecast pr. køn og region (12 måneder frem)](figs/arbejdsloshed_forecast.png)
Figur 8. Forecast pr. køn og region (12 måneder frem)

Der er estimeret modeller for arbejdsløsheden 12 måneder frem for hver 
kombination af køn og region. Figur 8 viser både pubktprognoser og 80% / 95% 
prædiktionsintervaller.

Forecasts er baseret på ARIMA-modeller, og er udvalgt via tidsserie 
cross-validation med laveste RMSE som kriterium. I de fleste tilfælde, er den 
automatisk estimerede model anvendt. 

For serier med autokorrelation i residualerne eller lav Ljung-Box p-værdi, er 
der i stedet manuelt specificeret sæsonudvidede ARIMA-modeller.


**Eksempler på manuelt specificerede modeller:**

ARIMA(2,0,2)(1,1,1)[12]: Mænd i Region Syddanmark og kvinder i Region 
Sjælland

ARIMA(1,0,2)(1,1,1)[12]: Mænd i Region Nordjylland

Disse modeller reducerede AIC/BIC og forbedrede residualplots uden 
systematisk autokorrelation.

**Centrale observationer fra forecast:**

- Arbejdsløsheden forventes generelt at være stabil eller let faldende i det 
kommende år.

- Mænd i Region Hovedstaden har det højeste forventede niveau og det bredeste 
usikkerhedsinterval – sandsynligvis pga. stor historisk variation.

- Tydelige sæsonmønstre ses hos mænd i Midtjylland, Sjælland og Syddanmark, 
fanget effektivt af de sæsonudvidede modeller.

- Kvinder i Nordjylland og Syddanmark har lave og stabile prognoser med 
smalle intervaller.

- Kvinder i Sjælland viser en vis usikkerhed i forecastet, hvilket kan indikere 
behov for mere fleksible modelvalg.

# Sammenligning


Sammenligning af forecastmodellerne på tværs af regioner og køn viser, at ARIMA 
generelt præsterer bedst målt på RMSE og MAPE. Dog blev der i enkelte tilfælde
observeret autokorrelation i residualerne ved brug af de automatisk estimerede 
modeller – særligt for mænd i Region Nordjylland og Midtjylland samt kvinder i 
Region Sjælland.

I disse tilfælde er der anvendt manuelt specificerede ARIMA-modeller med 
sæsonkomponenter (fx ARIMA(2,0,2)(1,1,1)[12]), hvilket forbedrede 
modeldiagnostikken betydeligt. Justeringerne resulterede i lavere AIC/BIC, 
bedre Ljung-Box-resultater og mere pålidelige forecasts.

ETS-modellen blev kun valgt i få tilfælde og præsterede generelt dårligere med 
hensyn til både informationskriterier og residualstruktur. Den sæson-naïve 
benchmarkmodel havde som forventet de højeste fejlmål og blev anvendt som 
reference.

Overordnet konkluderes, at ARIMA – især ved manuel tilpasning – er bedst egnet 
til at modellere arbejdsløsheden i Danmark. Det anbefales dog, at modelvalget
tilpasses individuelt for hver tidsserie for at sikre optimal 
prognosenøjagtighed og residualdiagnostik.

# Konklusion

I denne opgave har vi analyseret og forudsagt arbejdsløsheden i Danmark, fordelt
på region og køn i perioden 2007–2019. Til modellering anvendte vi ARIMA, ETS og
en sæson-naïv benchmarkmodel.

Forecastmodellerne blev valideret med time series cross-validation, og den bedst 
præsterende model pr. serie blev udvalgt baseret på laveste RMSE. 
Modeltilpasningen blev vurderet via residualanalyse (ACF og Ljung-Box-test).

ARIMA viste sig at være den mest præcise og robuste model i langt de fleste 
tilfælde. I enkelte serier var manuel justering af modelparametre nødvendig for
at sikre tilstrækkelig diagnostisk kvalitet.

ETS præsterede tilfredsstillende i få tilfælde, men kunne ikke konkurrere med 
ARIMA ved mere komplekse sæsonmønstre.

Forecasts for 2020 viser generelt stabile eller svagt faldende 
arbejdsløshedsrater, med størst usikkerhed i serier med høj variation – 
eksempelvis mænd i Region Hovedstaden.

Samlet set konkluderer vi, at ARIMA – særligt i manuelt tilpasset form – er den 
mest fleksible og valide model til forecasting af arbejdsløshed i Danmark. 
Modellerne kan med fordel anvendes som beslutningsstøtte i regional 
arbejdsmarkedsovervågning og planlægning.

# Bilag

## Bilag 1: Statistiktabeller opdelt på køn

![Statistik opdelt på køn](figs/tabelkvinder.png){ width=80% fig-align="center" }


![Statistik opdelt på køn](figs/tabelmand.png){ width=80% fig-align="center" }

```{r}
# ------------------------------------------------------------------------------
# 1. Load data
# ------------------------------------------------------------------------------
# Indlæser datasættet: 
arbejdsloshed <- readRDS("data/Airidk_long.rds")

# Vi bruger tsibble (tidy temporal tibble) fordi er den mest strukturerede 
# måde at håndtere tidsseriedata i tidyverse-miljøet på. 
# Hvis der mangler måneder
# Hvis tidsrækken ikke er regelmæssig
# Det sikrer, at modeller som ARIMA og ETS ikke fejler på grund af huller i data.
```
Kommentar til kodechunk:

Her indlæses datasættet. 

Derefter en oversigt over datasættet:
Overblik over for mange personer der er i hver region. 

kon: Kvinder og mænd 
Region: Region Hovedstaden, Region Midtjylland, Region Nordjylland, 
Region Sjælland, Region Syddanmark

svalue: arbejdsløshedsraten. 
5 svarer til 50.000 arbejdsløse. 0.01 svarer til 100 arbejdsløse.

```{r}
# ------------------------------------------------------------------------------
# 2. Eksplorativ dataanalyse - EDA
# ------------------------------------------------------------------------------
# 2.1. Visualisering: Plot de månedlige arbejdsløshedstal på forskellig vis 
# for at identificere overordnede tendenser og sæsonvariationer

# 2.1.1. Lav et autoplot for at se hvordan dataen ser ud generelt
  arbejdsloshed |>
  autoplot(svalue) +
  labs(
    title = "Autoplot af arbejdsløshed i Danmark (2007–2019), alle serier",
    x = "Tid",
    y = "Arbejdsløshedsrate pr. 10.000 personer"
  ) +
  theme_minimal() # Tidsserieplot

# Gemmer grafen som en PNG-fil
ggsave("figs/autoplotarbejdsloshed.png", width = 10, height = 6, dpi = 300)

# 2.1.2. Lav et plot for at se hvordan dataen ser ud fordelt på regioner 
# og køn. Tilføj en ny kolonne der kombinerer region og køn
arbejdsloshed <- arbejdsloshed |>
  mutate(region_kon = paste(region, kon, sep = "\n"))

# Lav plottet
ggplot(arbejdsloshed, aes(x = yearmonth, y = svalue, color = region_kon)) +
  geom_line(linewidth = 0.7) +  # Erstattet 'size' med 'linewidth'
  facet_wrap(~ region_kon, ncol = 4) +
  labs(
    title = "Arbejdsløshed gennem tiden",
    x = "År - måned",
    y = "Arbejdsløshedsrate pr. 10.000 personer"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    strip.text = element_text(face = "bold"),
    legend.position = "none"   # Fjerner legend da farver matcher facet-grupper
   # Viser ikke legend, da farverne matches til facets
  ) # Facetteret tidsserieplot af arbejdsløshed fordelt på region og køn

# Gemmer grafen som en PNG-fil
ggsave("figs/arbejdsloshed_over_tid.png", width = 10, height = 6, dpi = 300)
  
# 2.1.3. Lav et plot for at se sæsonmønstre
arbejdsloshed <- arbejdsloshed %>%
  mutate(
    month = as.numeric(format(yearmonth, "%m")),  # Måned (01-12)
    year = as.numeric(format(yearmonth, "%Y"))     # År
  )

ggplot(arbejdsloshed, aes(x = month, y = svalue, group = year, color = 
                            factor(year))) +
  geom_line() +
  facet_grid(kon ~ region) +  # Bemærk: kræver at `kon` og `region` findes 
                              # som variable
  labs(
    title = "Sæsonplot af arbejdsløshed fordelt på region og køn (alle år)",
    x = "Måned",
    y = "Arbejdsløshedsrate pr. 10.000 personer",
    color = "År"
  ) +
  theme_minimal() +
  theme(
    strip.text = element_text(face = "bold", size = 14),
    legend.position = "right"
  )
  
# Gemmer grafen som en PNG-fil

ggsave("figs/arbejdsløshed_saeson_ny.png", width = 10, height = 6, dpi = 300)


# 2.1.4. Lav et subseries plot for at se sæsonmønstre
arbejdsloshed |>
  gg_subseries()

# Gemmer grafen som en PNG-fil
ggsave("figs/subserieplot.png", width = 10, height = 6, dpi = 300)

```   
Kommentar til kodechunk: 

2.1.1.: Første autoplot viser arbejdsløsheden i Danmark over tid for alle
serier. Her ses der en nedadgående trend i arbejdsløsheden i perioden. 
Der observeres desuden sæsonvariation, hvor arbejdsløsheden er højere i 
vintermånederne og lavere om sommeren gældende for alle regioner og køn.

2.1.2: 
Anden visualisering viser endnu engang arbejdsløshedesudviklingen, men fordelt
på køn og region, fordelt for overskuelighedens skyld. Her ses trenden endnu 
engang, og her ses også sæsonudsvingene tydeligere, især hos mænd.

2.1.3:
I den tredje visualisering, som er et sæsonplot, ses sæsonmønstrene tydeligere.
Mænds ledighed topper ofte i vintermånederne og falder hen over sommeren. 
Kvinder har generelt mindre sæsonudsving.

2.1.2.4: 
I den fjerde visualisering, som er et subseries sæsonplot, ses tydelige 
sæsonudsving i arbejdsløsheden, især blandt mænd i regioner med sæsonprægede 
erhverv. 
Der ses typisk højere arbejdsløshed i vintermånederne (jan–mar), mens
sommermånederne (jun–sep) har lavere ledighed. 
```{r}
# 2.2. Deskriptive statistikker: Udvælg nogle få relevante statistikker fra 
# kapitel 4.
# Vi har beregnet følgende statistikker:
    # gennemsnit
    # minimum
    # maksimum
    # standardafvigelse
    # trend_strength (styrken af trenden)
    # season_strength_year (styrken af den årlige sæson)
    # remainder_var (variation i residualer)
    
 statistik <- arbejdsloshed |>
  features(svalue, features = list(
    mean = mean,
    min = min,
    max = max,
    sd = sd,
    feat_stl = feat_stl
  )) |>
  dplyr::select(kon, region, mean, min, max, 
                feat_stl_trend_strength, 
                feat_stl_seasonal_strength_year) |>
  mutate(across(where(is.numeric), ~ round(.x, 2))) |>
  rename(
    Køn = kon,
    Region = region,
    Gennemsnit = mean,
    Minimum = min,
    Maksimum = max,
    Trendstyrke = feat_stl_trend_strength,
    Sæsonstyrke = feat_stl_seasonal_strength_year
  ) |>
  arrange(Region, Køn)

# Vis tabellen med statistik
statistik |> 
  gt() |> 
  tab_header(
    title = "Deskriptive statistikker for arbejdsløshed (2007–2019)",
    subtitle = "Fordelt på region og køn"
  ) |>
  fmt_number(columns = where(is.numeric), decimals = 2)
  
# Gemmer tabel som en PNG-fil
ggsave("figs/tabel1.png", width = 10, height = 6, dpi = 300)

# trend_strength: Hvor stærk trenden er (0 = ingen trend, 1 = alt forklares af 
# trend)
# season_strength_year: Hvor stærk den årlige sæson er
# remainder_var: Hvor stor variationen er i støj (residualer)  

# Supplerende tabel: 

# Kvindetabel
statistik_kvinder <- statistik |> 
  filter(Køn == "Kvinder") |> 
  gt() |> 
  tab_header(
    title = "Deskriptive statistikker for arbejdsløshed – Kvinder",
    subtitle = "Fordelt på region (2007–2019)"
  ) |>
  fmt_number(columns = where(is.numeric), decimals = 2)

# Mandetabel
statistik_maend <- statistik |> 
  filter(Køn == "Mænd") |> 
  gt() |> 
  tab_header(
    title = "Deskriptive statistikker for arbejdsløshed – Mænd",
    subtitle = "Fordelt på region (2007–2019)"
  ) |>
  fmt_number(columns = where(is.numeric), decimals = 2)

# Vis begge tabeller (vises automatisk i RMarkdown / Quarto)
statistik_kvinder
statistik_maend
```  
Kommentar til kodechunk: 
**opnå et kvantitativt overblik over data**

Vi har beregnet en række centrale deskriptive statistikker for arbejdsløsheden, 
fordelt på region og køn.

Formålet er at supplere de visuelle analyser med et numerisk overblik over:
- **Gennemsnit**, **minimum** og **maksimum**: viser niveau og spænd i
arbejdsløsheden.

- **Trendstyrke**: angiver hvor stærk den langsigtede udvikling er i
tidsserien

 *(værdi nær 1 = tydelig trend, værdi nær 0 = ingen trend)*.
 
- **Sæsonstyrke**: måler hvor regelmæssig den årlige sæsonvariation er
 *(værdi nær 1 = stærk sæson, værdi nær 0 = ingen sæson)*.
 
Statistikkerne bekræfter de mønstre vi tidligere har identificeret visuelt:
Arbejdsløsheden har både en faldende trend og et klart sæsonmønster.

For at give et mere detaljeret overblik er de deskriptive statistikker opdelt
i to separate tabeller for henholdsvis kvinder og mænd.

Dette gør det nemmere at sammenligne forskelle mellem kønnene på tværs af
regioner uden at blande serierne i én samlet tabel.

```{r}  
# 2.3. Dekomposition: anvend STL-dekomposition for at lære data bedre at kende 
# ved at adskille trend-, sæson- og residualkomponenter. 
# Overvej transformation af data

# 1. STL-dekomposition: Vi opretter en model for hver region og køn
dekomp <- arbejdsloshed |>
  model(STL = STL(svalue)) |>
  components() |>
  mutate(region_kon = paste(region, kon, sep = " – "))

# 2. Gør komponenter lange, så de kan vises i facets
dekomp_long <- dekomp |>
  pivot_longer(
    cols = c(svalue, trend, season_year, remainder),
    names_to = "Komponent", values_to = "Værdi"
  )

# 3. Plot hver komponent (svalue, trend, season, remainder) for hver region/køn
ggplot(dekomp_long, aes(x = yearmonth, y = Værdi)) +
  geom_line(color = "steelblue", linewidth = 0.6) +
  facet_grid(Komponent ~ region_kon, scales = "free_y") +
  labs(
    title = "STL-dekomposition af arbejdsløshed (2007–2019)",
    x = "År",
    y = "Værdi"
  ) +
  theme_minimal(base_size = 11) +
  theme(
    strip.text = element_text(face = "bold", size = 10),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

ggsave("figs/stl_dekomposition_arbejdsloshed.png", width = 12, height = 8, 
       dpi = 300)
    
```
Vi brugte STL-dekomposition for at adskille trend, sæson og støj. Det hjalp 
os med at forstå strukturen i arbejdsløsheden og vurdere, hvilke modeller der 
passede bedst. Vi kunne også se, at serierne ikke krævede transformation, og at 
modellerne skulle kunne håndtere stærk sæson.

```{r}
# ------------------------------------------------------------------------------
# 3. Modelvalg – med time series cross-validation
# ------------------------------------------------------------------------------
# Lav rolling-origin resamples med vinduer på mindst 120 måneder

 tscv_data <- arbejdsloshed |>
   stretch_tsibble(.init = 120, .step = 1)

# Vi bruger .init = 120 mener at vi træner på 10 år (2007–2016) i første split
# Langt mere stabilt og praktisk i en økonomisk tidsserie som arbejdsløshed
# step = 1 betyder at vi laver et split for hver måned, så vi kan validere
# strech_tsibble() laver en tidsserie-cross-validation struktur

# Det betyder:
# 
# Hver af dine 10 tidsserier (region × køn) starter med 120 måneder (10 år)
# Så laver stretch_tsibble() en række “rolling windows”, hvor hver gang 1 ny 
# måned tilføjes

# Før jeg estimer modellerne, skal jeg aktivere plan(multisession) for at køre
# modeller hurtigere i parallel.

library(future)

# plan(multisession)

# Estimer ARIMA, ETS og RW for hver serie og hvert resample

# Kør ARIMA alene
modeller_arima <- tscv_data |>
 model(arima = ARIMA(svalue))

# Kør ETS alene
modeller_ets <- tscv_data |>
  model(ets = ETS(svalue))

# Sæsonnaïve
# Kør RW alene
modeller_snaive <- tscv_data |>
 model(snaive = SNAIVE(svalue))

# # Efter vi har kørt modellerne skal vi sætte plan tilbage til sequential
plan(sequential)

# Gemmer resultaterne som RDS-filer for senere brug
saveRDS(modeller_arima, "model/modeller_arima.rds")
saveRDS(modeller_ets, "model/modeller_ets.rds")
saveRDS(modeller_snaive, "model/modeller_snaive.rds")

modeller_snaive <- readRDS("model/modeller_snaive.rds")
modeller_arima <- readRDS("model/modeller_arima.rds")
modeller_ets <- readRDS("model/modeller_ets.rds")

```
Komentar til kodechunk:
I dette afsnit har vi udført modelvalg ved at estimere tre forskellige modeller
(ARIMA, ETS og SNAIVE) for hver kombination af køn og region ved hjælp af
tidsserie-cross-validation (TSCV). Vi har brugt `stretch_tsibble()` til at
oprette rolling-origin resamples, der gør det muligt at validere modellerne
over tid. Modellerne er gemt som RDS-filer for senere brug.

```{r}
# ------------------------------------------------------------------------------
# 4. Modelvalidering – CV-evaluering og bedste model per serie
# ------------------------------------------------------------------------------
# 4.1. Beregn forecasting-fejl for hver model
# Beregn forecasting-fejl for hver model i TSCV

# Først: Find den fælles tidsperiode der findes i både forudsigelser og 
# faktiske data
gyldige_datoer <- arbejdsloshed$yearmonth

# Brug kun gyldige datoer i accuracy-evalueringen
cv_accuracy_arima <- modeller_arima |>
  forecast(h = 1) |>
  filter(yearmonth %in% gyldige_datoer) |>  # Filtrer til eksisterende datoer
  accuracy(arbejdsloshed)

cv_accuracy_ets <- modeller_ets |>
  forecast(h = 1) |>
  filter(yearmonth %in% gyldige_datoer) |>  # Filtrer til eksisterende datoer
  accuracy(arbejdsloshed)

cv_accuracy_snaive <- modeller_snaive |>
  forecast(h = 1) |>
  filter(yearmonth %in% gyldige_datoer) |>  # Filtrer til eksisterende datoer
  accuracy(arbejdsloshed)
```
Komentar til kodechunk:
I dette afsnit har vi udført modelvalidering ved at beregne forecasting-fejl for
hver model (ARIMA, ETS og SNAIVE) ved hjælp af tidsserie-cross-validation (TSCV).

```{r}
# 4.2. Beregn RMSE og MAPE for hver model og serie
# Find gennemsnitlig RMSE og MAPE for hver model og serie

# Tilføj modelnavn som kolonne til hver CV-resultat
cv_accuracy_arima <- cv_accuracy_arima |> mutate(.model = "arima")
cv_accuracy_ets   <- cv_accuracy_ets   |> mutate(.model = "ets")
cv_accuracy_snaive    <- cv_accuracy_snaive    |> mutate(.model = "snaive")

# Kombinér alle resultater
cv_accuracy_total <- bind_rows(
  cv_accuracy_arima,
  cv_accuracy_ets,
  cv_accuracy_snaive
)

# Beregn gennemsnitlig RMSE og MAPE pr. model og serie
samlet_vurdering <- cv_accuracy_total |>
  group_by(kon, region, .model) |>
  summarise(
    RMSE = mean(RMSE, na.rm = TRUE),
    MAPE = mean(MAPE, na.rm = TRUE),
    .groups = "drop"
  )

# Vis i tabel
samlet_vurdering |>
  knitr::kable(digits = 3, caption = "RMSE og MAPE for hver model og serie") |>
  kableExtra::kable_styling()

# 4.3. Vis tabel med RMSE og MAPE for hver model og serie
# Find bedste model pr. serie (lavest RMSE)
bedste_model <- samlet_vurdering |>
  group_by(kon, region) |>
  slice_min(RMSE, n = 1) |>
  ungroup()

# Vis tabel
bedste_model |> 
knitr::kable(digits = 3, caption = "Bedste model per serie (baseret på RMSE)")|> 
  kableExtra::kable_styling()


```
Komentar til kodechunk:
I dette afsnit har vi udført modelvalidering ved at beregne forecasting-fejl for
hver model (ARIMA, ETS og SNAIVE) ved hjælp af tidsserie-cross-validation (TSCV).
Vi har beregnet RMSE og MAPE for hver model og serie, og fundet den bedste model
for hver kombination af køn og region baseret på lavest RMSE.

```{r}

# 4.4. Residualanalyse for at vurdere modeltilpasning

# Grupper modeller og beregner ACF og Ljung-Box-test for hver model

# Model for kvinder i Region Hovedstaden:
fit_1 <- arbejdsloshed |> 
  filter(kon == "Kvinder", region == "Region Hovedstaden") |> 
  model(arima = ARIMA(svalue)) |>
  report(fit_1)
# Model: ARIMA(4,0,2)(0,1,0)[12] 
# 
# Coefficients:
#          ar1     ar2      ar3      ar4     ma1      ma2
#       0.9836  0.6905  -0.5088  -0.1953  0.2758  -0.6246
# s.e.  0.1168  0.1402   0.1434   0.1002  0.0964   0.0928
# 
# sigma^2 estimated as 0.001434:  log likelihood=267.21
# AIC=-520.42   AICc=-519.59   BIC=-499.63

# Denne model er en sæsonjusteret ARIMA-model, som kombinerer både:
# En ikke-sæsonbestemt ARMA-komponent: ARIMA(4,0,2)
# En sæsonkomponent: (0,1,0)[12]

# 1. Ikke-sæsonkomponent: ARIMA(4,0,2)
# p = 4: Der er 4 autoregressive (AR) led. Det betyder, at modellen bruger de seneste 4 værdier til at forudsige den næste.
# d = 0: Serien er ikke differenceret (stationær).
# q = 2: Der er 2 moving average (MA) led. Det vil sige, at modellen tager højde for støj fra de seneste 2 perioder.

# 2. Sæsonkomponent: (0,1,0)[12]
# P = 0, D = 1, Q = 0, og [12] betyder, at modellen har sæsondifferencering 
# med sæsonlængde 12 (typisk 12 måneder = 1 år).
# Det vil sige, at den fjerner sæsonmønstre med en årlig cyklus.
# Der er ingen sæson-AR eller MA-led.

# 3. Varians og goodness-of-fit
# sigma² ≈ 0.001434: Varians af fejlleddet (jo lavere, jo bedre).
# Log-likelihood = 267.21: Bruges til at sammenligne modeller – højere er bedre.
# AIC, AICc, BIC: Informationskriterier – lavere værdier indikerer bedre model 
# (med straf for kompleksitet).
# AIC = -520.42
# AICc = -519.59 (korrigeret for lille sample)
# BIC = -499.63

fit_1 |>
  gg_tsresiduals(lag_max = 36)
# ACF-plot for at vurdere autokorrelation i residualer
# Vi har bruget lag_max = 36 for at se autokorrelation op til 3 år 
# (12 måneder * 3) 
# Øverste plot viser innovation residualerne over tid. Residualerne svinger 
# tilfældigt omkring nul, hvilket tyder på, at modellen fanger strukturen i 
# dataen rimeligt godt.
# 
# Nederste venstre plot (ACF) viser, at de fleste autokorrelationer ligger 
# inden for de blå konfidensgrænser (±1.96/√n). Der er enkelte spikes, men 
# ingen systematisk autocorrelation, hvilket er positivt.
# 
# Histogrammet (højre) viser, at residualerne er nogenlunde symmetrisk fordelt 
# omkring nul – dog lidt højreskævhed. Det tyder på, at 
# normalfordelingsantagelsen er acceptabel.

# gem som billede i figs-mappen

ggsave("figs/fit_1_residuals.png", width = 10, height = 6, dpi = 300)

augment(fit_1) |>
  features(.innov, ljung_box, lag = 24, dof=6)
# Forklaring:
# augment(fit_1) henter residualerne (her som .innov) og tidsindekset fra 
# modellen.
# .innov er de innovationsbaserede residualer fra ARIMA (det korrekte input).
# features(..., ljung_box, ...) anvender Ljung-Box-test på residualerne.
# lag = 24 tjekker for autocorrelation op til 24 lag.
# dof = 6 (degrees of freedom) = p + q = 4 + 2 for din ARIMA(4,0,2) – korrekt 
# valgt.

# Konklusion:
# På baggrund af ACF, histogram og Ljung-Box-test vurderes det, at modellen 
# ikke har systematiske fejl – residualerne opfører sig som hvid støj. Modellen 
# kan derfor anvendes til forecast.

# Model for kvinder i Region Midtjylland:
fit_2 <- arbejdsloshed |> 
  filter(kon == "Kvinder", region == "Region Midtjylland") |> 
  model(arima = ARIMA(svalue)) |>
  report(fit_2)

fit_2 |>
  gg_tsresiduals(lag_max = 36)

augment(fit_1) |>
  features(.innov, ljung_box, lag = 24, dof=6)

# Model for kvinder i Region Nordjylland:
fit_3 <- arbejdsloshed |> 
  filter(kon == "Kvinder", region == "Region Nordjylland") |> 
  model(arima = ARIMA(svalue)) |>
  report(fit_3)

fit_3 |> 
  gg_tsresiduals(lag_max = 36)

augment(fit_3) |>
  features(.innov, ljung_box, lag = 24, dof=4)

# Model for kvinder i Region Sjælland:

fit_4 <- arbejdsloshed |> 
  filter(kon == "Kvinder", region == "Region Sjælland") |> 
  model(arima = ARIMA(svalue ~ pdq(2,0,2) + PDQ(1,1,1, period = 12) + 0)) |> 
  report(fit_4)


fit_4 |>
  gg_tsresiduals(lag_max = 36)

augment(fit_4) |>
  features(.innov, ljung_box, lag = 24, dof=3)

# OBS:Ved at specificere en udvidet ARIMA(2,0,2)(1,1,1)[12]-model for kvinder i 
# Region Sjælland opnåede vi en betydelig forbedring i forhold til den 
# automatisk valgte model. AIC og BIC er lavere, og residualanalysen viser 
# kun svag autokorrelation. Ljung-Box-testens p-værdi (0.037) nærmer sig 
# signifikansniveauet. Modellen vurderes derfor som acceptabel og anvendelig 
# til forecasting.

# Model for kvinder i Region Syddanmark:
fit_5 <- arbejdsloshed |> 
  filter(kon == "Kvinder", region == "Region Syddanmark") |> 
  model(arima = ARIMA(svalue)) |>
  report(fit_5)
fit_5 |> 
  gg_tsresiduals(lag_max = 36)
augment(fit_5) |>
  features(.innov, ljung_box, lag = 24, dof=3)
# Model for mænd i Region Hovedstaden:

fit_6 <- arbejdsloshed |> 
  filter(kon == "Mænd", region == "Region Hovedstaden") |> 
  model(arima = ARIMA(svalue)) |>
  report(fit_6)
fit_6 |>
  gg_tsresiduals(lag_max = 36)
augment(fit_6) |>
  features(.innov, ljung_box, lag = 24, dof=6)

# Model for mænd i Region Midtjylland:
fit_7 <- arbejdsloshed |> 
  filter(kon == "Mænd", region == "Region Midtjylland") |> 
  model(arima = ARIMA(svalue ~ pdq(2,0,2) + PDQ(1,1,1, period = 12) + 0)) |>
report(fit_7)

fit_7 |>
  gg_tsresiduals(lag_max = 36)

augment(fit_7) |>
  features(.innov, ljung_box, lag = 24, dof=6)
# OBS:
# Residualanalysen viser stærk autokorrelation i residualerne (p = 0.000) 
# samt en skæv og ujævn fordeling. Dette indikerer, at ARIMA-modellen ikke er 
# egnet til denne serie. En alternativ model, som f.eks. en udvidet ARIMA-model
# med sæsonkomponenter, kan være nødvendig for at fange strukturen i dataene
# bedre.

# OBS: 
# Vi testede også en ETS-model for mænd i Region Midtjylland, men 
# residualanalysen viste stærk autokorrelation, fejl i Ljung-Box-testen 
# (p = 0.000) samt en skæv og ujævn fordeling. Det betyder, at ETS-modellen 
# ikke er egnet til denne serie. Den tidligere udvidede ARIMA-model var klart 
# bedre, selvom den heller ikke var perfekt.

# Model for mænd i Region Nordjylland:
fit_8 <- arbejdsloshed |>
  filter(kon == "Mænd", region == "Region Nordjylland") |>
  model(ARIMA(svalue ~ pdq(1,0,2) + PDQ(1,1,1, period = 12) + 0))

report(fit_8)

fit_8 |> gg_tsresiduals(lag_max = 36)
augment(fit_8) |> features(.innov, ljung_box, lag = 24, dof=5)

# Her har vi skabt en funktion for at køre flere ARIMA-modeller med 
# forskellige parametre for at finde den bedste model for mænd i Region
# Nordjylland.

model_list <- list(
"ARIMA(2,0,1)(1,1,2)" = ARIMA(svalue ~ pdq(2,0,1) + PDQ(1,1,2, period = 12) + 0),
"ARIMA(2,0,2)(0,1,1)" = ARIMA(svalue ~ pdq(2,0,2) + PDQ(0,1,1, period = 12) + 0),
"ARIMA(1,0,2)(1,1,1)" = ARIMA(svalue ~ pdq(1,0,2) + PDQ(1,1,1, period = 12) + 0),
"ARIMA(2,0,2)(1,1,0)" = ARIMA(svalue ~ pdq(2,0,2) + PDQ(1,1,0, period = 12) + 0),
"ARIMA(1,0,1)(1,1,1)" = ARIMA(svalue ~ pdq(1,0,1) + PDQ(1,1,1, period = 12) + 0)
)

# Filter data
df <- arbejdsloshed |> 
  filter(kon == "Mænd", region == "Region Nordjylland")

# Evaluer modeller
results <- purrr::map_dfr(names(model_list), function(name) {
  mod <- tryCatch({
    df |> model(arima = model_list[[name]])
  }, error = function(e) return(NULL))
  
  if (!is.null(mod)) {
    rep <- report(mod)
    lb <- augment(mod) |> 
      features(.innov, ljung_box, lag = 24, dof = length(rep$estimate)) |> 
      select(lb_stat, lb_pvalue)
    
    tibble(
      model_name = name,
      aic = rep$AIC,
      bic = rep$BIC,
      lb_stat = lb$lb_stat,
      lb_pvalue = lb$lb_pvalue
    )
  } else {
    tibble(model_name = name, aic = NA, bic = NA, lb_stat = NA, lb_pvalue = NA)
  }
})

# Vis tabel
results |> arrange(results)

#OBS:

# Vi har testet fem forskellige ARIMA-modeller med både ikke-sæson og 
# sæsonkomponenter for serien mænd i Region Nordjylland. Ingen af modellerne 
# bestod Ljung-Box-testen (p < 0.05), hvilket indikerer restautokorrelation i 
# residualerne. Blandt de testede modeller valgte vi ARIMA(1,0,2)(1,1,1)[12] som
# den bedst egnede, da den havde den højeste p-værdi (0.0064) og dermed den mest 
# tilfældige reststruktur blandt kandidaterne. Modellen giver en acceptabel 
# balance mellem informationskriterier og residualdiagnostik.

#OBS:

# ETS-modellen for mænd i Region Nordjylland klarer sig markant dårligere 
# end ARIMA. Den fejler fuldstændigt på Ljung-Box-testen (p = 0), har stærk 
# autokorrelation i residualerne, og informationskriterierne er væsentligt 
# højere.
# ETS kan derfor ikke anvendes til denne serie.

# Model for mænd i Region Sjælland:
fit_9 <- arbejdsloshed |> 
  filter(kon == "Mænd", region == "Region Sjælland") |> 
  model(arima = ARIMA(svalue)) |>
  report(fit_9)
fit_9 |>
  gg_tsresiduals(lag_max = 36)
augment(fit_9) |>
  features(.innov, ljung_box, lag = 24, dof=2)

# Model for mænd i Region Syddanmark:
fit_10 <- arbejdsloshed |> 
  filter(kon == "Mænd", region == "Region Syddanmark") |> 
  model(arima = ARIMA(svalue ~ pdq(2,0,2) + PDQ(1,1,1, period = 12) + 0)) |>
  report(fit_10)
fit_10 |>
  gg_tsresiduals(lag_max = 36)
augment(fit_10) |>
  features(.innov, ljung_box, lag = 24, dof=6)

# OBS:ARIMA(2,0,2)(1,1,1)[12] er den stærkeste model for mænd i Region 
# Syddanmark. Den har lav AIC, forbedrede residualplots og en markant højere 
# p-værdi i Ljung-Box-testen (0.015). Selvom p-værdien stadig er under 0.05, 
# vurderes modellen som acceptabel i praksis og den bedst egnede blandt de 
# testede.
```
Kommentar til kodechunk:
Beregn af ACF plot og Ljung-Box-test for at vurdere autokorrelation i
residualer for alle 10 modeller.
```{r}
# ------------------------------------------------------------------------------
# 6. Forecasting
# ------------------------------------------------------------------------------
# 1. Kvinder - Region Hovedstaden - arima
fc_1 <- forecast(fit_1, h = "12 months")

# 2. Kvinder - Region Midtjylland - arima
fc_2 <- forecast(fit_2, h = "12 months")

# 3. Kvinder - Region Nordjylland - arima
fc_3 <- forecast(fit_3, h = "12 months")

# 4. Kvinder - Region Sjælland - arima
fc_4 <- forecast(fit_4, h = "12 months") |>
  mutate(
    kon = "Kvinder",
    region = "Region Sjælland",
    .model = "ARIMA(2,0,2)(1,1,1)[12]"  # <- skriv dit modelnavn her
  )

# 5. Kvinder - Region Syddanmark - arima
fc_5 <- forecast(fit_5, h = "12 months")

# 6. Mænd - Region Hovedstaden - arima
fc_6 <- forecast(fit_6, h = "12 months")

# 7. Mænd - Region Midtjylland - arima
fc_7 <- forecast(fit_7, h = "12 months") |>
  mutate(
    kon = "Mænd",
    region = "Region Midtjylland",
    .model = "ARIMA(2,0,2)(1,1,1)[12]"  # <- skriv dit modelnavn her
  )

# 8. Mænd - Region Nordjylland - arima
fc_8 <- forecast(fit_8, h = "12 months") |>
  mutate(
    kon = "Mænd",
    region = "Region Nordjylland",
    .model = "ARIMA(1,0,2)(1,1,1)[12]"  # <- skriv dit modelnavn her
  )


# 9. Mænd - Region Sjælland - arima
fc_9 <- forecast(fit_9, h = "12 months")

# 10. Mænd - Region Syddanmark - arima
fc_10 <- forecast(fit_10, h = "12 months") |>
  mutate(
    kon = "Mænd",
    region = "Region Syddanmark",
    .model = "ARIMA(2,0,2)(1,1,1)[12]"  # <- skriv dit modelnavn her
  )

# 2. Kombiner alle forecasts i en liste
all_forecasts <- bind_rows(
  fc_1 |> mutate(kon = "Kvinder", region = "Region Hovedstaden"),
  fc_2 |> mutate(kon = "Kvinder", region = "Region Midtjylland"),
  fc_3 |> mutate(kon = "Kvinder", region = "Region Nordjylland"),
  fc_4 |> mutate(kon = "Kvinder", region = "Region Sjælland"),
  fc_5 |> mutate(kon = "Kvinder", region = "Region Syddanmark"),
  fc_6 |> mutate(kon = "Mænd", region = "Region Hovedstaden"),
  fc_7 |> mutate(kon = "Mænd", region = "Region Midtjylland"),
  fc_8 |> mutate(kon = "Mænd", region = "Region Nordjylland"),
  fc_9 |> mutate(kon = "Mænd", region = "Region Sjælland"),
  fc_10 |> mutate(kon = "Mænd", region = "Region Syddanmark")
)

# 3. Plot forecasts for hver kombination af region og køn

all_forecasts |> 
  autoplot(arbejdsloshed) +
  facet_wrap(vars(kon, region), scales = "free_y") +
  labs(title = "Forecast pr. køn og region (12 måneder frem)", 
       y = "Arbejdsløshed")

# Gemmer forecast-plot som PNG

ggsave("figs/arbejdsloshed_forecast.png", width = 12, height = 8, dpi = 300)
```
Kommentar til kodechunk:
Forecasting af modeller for arbejdsløshed pr. køn og region.
